<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hai.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.hai.pojo.Users">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="face_image" jdbcType="VARCHAR" property="faceImage" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="fans_counts" jdbcType="INTEGER" property="fansCounts" />
    <result column="follow_counts" jdbcType="INTEGER" property="followCounts" />
    <result column="receive_like_counts" jdbcType="INTEGER" property="receiveLikeCounts" />
  </resultMap>
  
  <update id="addReciveLikeCounts" parameterType="String">
  	update users set receive_like_counts = receive_like_counts+1 where id = #{userId}
  </update>
  
  <update id="reduceReciveLikeCounts" parameterType="String">
  	update users set receive_like_counts = receive_like_counts-1 where id = #{userId}
  </update>
  
  <update id="addFansCounts" parameterType="String">
  	update users set fans_counts = fans_counts+1 where id = #{publisherId}
  </update>
  
  <update id="reduceFansCounts" parameterType="String">
  	update users set fans_counts = fans_counts-1 where id = #{publisherId}
  </update>
  
  <select id="selectUsersByFansId" resultMap="BaseResultMap" parameterType="String">
		SELECT u.id,u.username,u.face_image,u.nickname,u.fans_counts,u.follow_counts,u.receive_like_counts FROM users_fans uf LEFT JOIN users u ON uf.user_id =
		u.id where uf.fan_id= #{fansId}
	</select>
  
</mapper>